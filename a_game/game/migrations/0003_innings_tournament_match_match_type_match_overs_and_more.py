# Generated by Django 4.2.7 on 2025-08-31 16:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("game", "0002_remove_bid_unique_bid_per_auction_player_team_amount_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Innings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "innings_type",
                    models.CharField(
                        choices=[
                            ("FIRST", "First Innings"),
                            ("SECOND", "Second Innings"),
                        ],
                        max_length=10,
                    ),
                ),
                ("total_runs", models.IntegerField(default=0)),
                ("wickets_lost", models.IntegerField(default=0)),
                (
                    "overs_bowled",
                    models.DecimalField(decimal_places=1, default=0, max_digits=4),
                ),
                ("extras", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "innings",
            },
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "tournament_type",
                    models.CharField(
                        choices=[
                            ("LEAGUE", "League"),
                            ("KNOCKOUT", "Knockout"),
                            ("ROUND_ROBIN", "Round Robin"),
                            ("HYBRID", "Hybrid"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("REGISTRATION", "Registration Open"),
                            ("ACTIVE", "Active"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="REGISTRATION",
                        max_length=20,
                    ),
                ),
                ("max_teams", models.IntegerField(default=8)),
                ("current_teams", models.IntegerField(default=0)),
                ("entry_fee", models.IntegerField(default=0)),
                ("prize_pool", models.IntegerField(default=0)),
                (
                    "rating_factor",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=4),
                ),
                ("registration_start", models.DateTimeField()),
                ("registration_end", models.DateTimeField()),
                ("tournament_start", models.DateTimeField()),
                ("tournament_end", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "tournaments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="match",
            name="match_type",
            field=models.CharField(default="T20", max_length=20),
        ),
        migrations.AddField(
            model_name="match",
            name="overs",
            field=models.IntegerField(default=20),
        ),
        migrations.AddField(
            model_name="match",
            name="team1_overs",
            field=models.DecimalField(decimal_places=1, default=0, max_digits=4),
        ),
        migrations.AddField(
            model_name="match",
            name="team1_rating_change",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=6),
        ),
        migrations.AddField(
            model_name="match",
            name="team2_overs",
            field=models.DecimalField(decimal_places=1, default=0, max_digits=4),
        ),
        migrations.AddField(
            model_name="match",
            name="team2_rating_change",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=6),
        ),
        migrations.AddField(
            model_name="team",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_teams",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="team",
            name="name",
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_rating",
                    models.DecimalField(decimal_places=2, default=1000.0, max_digits=6),
                ),
                (
                    "peak_rating",
                    models.DecimalField(decimal_places=2, default=1000.0, max_digits=6),
                ),
                ("career_matches", models.IntegerField(default=0)),
                ("career_runs", models.IntegerField(default=0)),
                ("career_wickets", models.IntegerField(default=0)),
                ("career_wins", models.IntegerField(default=0)),
                ("career_losses", models.IntegerField(default=0)),
                ("tournaments_played", models.IntegerField(default=0)),
                ("tournaments_won", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cricket_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_profiles",
            },
        ),
        migrations.CreateModel(
            name="RatingHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_rating", models.DecimalField(decimal_places=2, max_digits=6)),
                ("new_rating", models.DecimalField(decimal_places=2, max_digits=6)),
                ("rating_change", models.DecimalField(decimal_places=2, max_digits=6)),
                ("reason", models.CharField(max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "match",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.match",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="game.tournament",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rating_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "rating_history",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Over",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("over_number", models.IntegerField()),
                ("runs_scored", models.IntegerField(default=0)),
                ("wickets", models.IntegerField(default=0)),
                (
                    "bowler",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overs_bowled",
                        to="game.player",
                    ),
                ),
                (
                    "innings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overs",
                        to="game.innings",
                    ),
                ),
            ],
            options={
                "db_table": "overs",
                "unique_together": {("innings", "over_number")},
            },
        ),
        migrations.AddField(
            model_name="innings",
            name="batting_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batting_innings",
                to="game.team",
            ),
        ),
        migrations.AddField(
            model_name="innings",
            name="bowling_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bowling_innings",
                to="game.team",
            ),
        ),
        migrations.AddField(
            model_name="innings",
            name="match",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="innings",
                to="game.match",
            ),
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("CENTURY", "Century"),
                            ("FIVE_WICKETS", "Five Wickets"),
                            ("HAT_TRICK", "Hat Trick"),
                            ("TOURNAMENT_WIN", "Tournament Winner"),
                            ("RATING_MILESTONE", "Rating Milestone"),
                            ("MATCH_WIN", "Match Win"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "match",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="game.match",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="game.tournament",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "achievements",
                "ordering": ["-earned_at"],
            },
        ),
        migrations.AddField(
            model_name="match",
            name="tournament",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="matches",
                to="game.tournament",
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="tournament",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="game.tournament",
            ),
        ),
        migrations.CreateModel(
            name="TournamentRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registered_at", models.DateTimeField(auto_now_add=True)),
                (
                    "rating_at_registration",
                    models.DecimalField(decimal_places=2, max_digits=6),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="game.team"
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registrations",
                        to="game.tournament",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tournament_registrations",
                "unique_together": {("tournament", "user")},
            },
        ),
        migrations.CreateModel(
            name="PlayerPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("runs_scored", models.IntegerField(default=0)),
                ("balls_faced", models.IntegerField(default=0)),
                ("fours", models.IntegerField(default=0)),
                ("sixes", models.IntegerField(default=0)),
                ("batting_position", models.IntegerField(blank=True, null=True)),
                ("how_out", models.CharField(blank=True, max_length=100)),
                (
                    "overs_bowled",
                    models.DecimalField(decimal_places=1, default=0, max_digits=4),
                ),
                ("runs_conceded", models.IntegerField(default=0)),
                ("wickets_taken", models.IntegerField(default=0)),
                ("maidens", models.IntegerField(default=0)),
                ("catches", models.IntegerField(default=0)),
                ("stumpings", models.IntegerField(default=0)),
                ("run_outs", models.IntegerField(default=0)),
                (
                    "batting_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "bowling_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "fielding_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "overall_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_performances",
                        to="game.match",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="game.player"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="game.team"
                    ),
                ),
            ],
            options={
                "db_table": "player_performances",
                "unique_together": {("match", "player")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="innings",
            unique_together={("match", "innings_type")},
        ),
        migrations.CreateModel(
            name="Ball",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ball_number", models.IntegerField()),
                (
                    "outcome",
                    models.CharField(
                        choices=[
                            ("0", "Dot Ball"),
                            ("1", "1 Run"),
                            ("2", "2 Runs"),
                            ("3", "3 Runs"),
                            ("4", "Four"),
                            ("6", "Six"),
                            ("W", "Wicket"),
                            ("WD", "Wide"),
                            ("NB", "No Ball"),
                            ("B", "Bye"),
                            ("LB", "Leg Bye"),
                        ],
                        max_length=3,
                    ),
                ),
                ("runs", models.IntegerField(default=0)),
                ("is_wicket", models.BooleanField(default=False)),
                (
                    "dismissal_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BOWLED", "Bowled"),
                            ("CAUGHT", "Caught"),
                            ("LBW", "LBW"),
                            ("STUMPED", "Stumped"),
                            ("RUN_OUT", "Run Out"),
                            ("HIT_WICKET", "Hit Wicket"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "batsman",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balls_faced",
                        to="game.player",
                    ),
                ),
                (
                    "bowler",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balls_bowled",
                        to="game.player",
                    ),
                ),
                (
                    "fielder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="fielding_balls",
                        to="game.player",
                    ),
                ),
                (
                    "over",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balls",
                        to="game.over",
                    ),
                ),
            ],
            options={
                "db_table": "balls",
                "unique_together": {("over", "ball_number")},
            },
        ),
    ]
